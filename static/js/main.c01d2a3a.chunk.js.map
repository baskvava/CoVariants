{"version":3,"sources":["redux/Actions.js","redux/Reducer.js","nextApp.js","App.js","reportWebVitals.js","index.js"],"names":["GETDATA","processData","ALL_JSON","rename_columns","ALL_DF","DataFrame","county","length","week","covkeys","Object","keys","build_obj","i","Array","obj","others","delta","total","total_sequences","K","indexOf","at","push","city_DF","append","ALL_USA_JSON","ALL_col","Need_DF","get","week_set","Set","values","week_list","week_date","WEEK_JSON","WEEK_JSON_T","filter","eq","col","now_list","t","isNaN","initialState","URL","App","props","color_set","counties_list","counties_regions_set","state","fetch","then","res","json","countries","getData","response","responseJson","catch","error","console","this","getVarintsFromApiAsync","name","fill","Area","type","dataKey","stroke","fillOpacity","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","thisdata","ID","className","style","width","display","alignItems","justifyContent","ResponsiveContainer","height","AreaChart","data","margin","top","right","left","bottom","Legend","verticalAlign","iconType","map","virus","One_linearGradient","XAxis","YAxis","CartesianGrid","strokeDasharray","Tooltip","One_Area","Nav","Item","Link","eventKey","DF","County_JSON","to_json","orient","Tab","Pane","One_Plot","Spinner","animation","region","Container","defaultActiveKey","Row","Col","sm","variant","One_Nav","Content","One_TabPane","indx","sty","fluid","Each_County","position","zIndex","Navbar","bg","Brand","href","NavDropdown","title","target","paddingTop","calling_all","idx","Each_Region","Card","Body","Title","Text","Button","Footer","React","Component","connect","dispatch","getdata","store","createStore","action","RE","preApp","subscribe","serialisedState","JSON","stringify","localStorage","setItem","e","warn","saveToLocalStorage","getState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c01d2a3a.chunk.js","sourcesContent":["export const GETDATA = \"GETDATA\";\n\nexport function getdata(ALL_JSON) {\n    return {type: GETDATA, ALL_JSON}\n}","import {\n    GETDATA,\n} from \"./Actions\";\nimport {DataFrame} from \"pandas-js\";\n\nfunction processData(ALL_JSON) {\n    const rename_columns = {\n        \"20I (Alpha, V1)\": \"Alpha\", \"20H (Beta, V2)\": \"Beta\", \"20J (Gamma, V3)\": \"Gamma\",\n        \"21K (Omicron)\": \"Omicron\", \"21B (Kappa)\": \"Kappa\", \"21D (Eta)\": \"Eta\", \"21G (Lambda)\": \"Lambda\",\n        \"21F (Iota)\": \"Iota\"\n    }\n    let ALL_DF = new DataFrame()\n\n    for (const county in ALL_JSON) {\n        // console.log( ALL_JSON[county] )\n        const length = ALL_JSON[county].week.length\n        const covkeys = Object.keys(ALL_JSON[county])\n        const build_obj = []\n        for (var i in [...Array(length).keys()]) {\n            const obj = {};\n            let others = 0\n            let delta = 0\n            let total = 0\n            let total_sequences = 0\n            for (var K of covkeys) {\n                if (['20A/S:98F', '21H (Mu)', '20B/S:732A', '20A/S:126A', '20E (EU1)',\n                    '21C (Epsilon)', '20A/S:439K', 'S:677H.Robin1', 'S:677P.Pelican',\n                    '20A.EU2', '20G/S:677H.Robin2', '20G/S:677H.Yellowhammer',\n                    '20G/S:677R.Roadrunner', '20G/S:677H.Heron', '20G/S:677H.Bluebird',\n                    '20G/S:677H.Quail', '20G/S:677H.Mockingbird'].indexOf(K) >= 0) {\n                    others = others + ALL_JSON[county][K].at(i)\n                } else if (['21A (Delta)', '21I (Delta)', '21J (Delta)'].indexOf(K) >= 0) {\n                    delta = delta + ALL_JSON[county][K].at(i)\n                } else if (K === \"total_sequences\") {\n                    total_sequences = ALL_JSON[county][K].at(i)\n                    continue\n                } else if (K === \"week\") {\n                    obj[\"week\"] = ALL_JSON[county][K].at(i)\n                    continue\n                } else {\n                    obj[rename_columns[K]] = ALL_JSON[county][K].at(i)\n                }\n                total = total + ALL_JSON[county][K].at(i)\n            }\n            obj[\"Delta\"] = delta\n            obj[\"others\"] = others\n            obj[\"non_variants\"] = total_sequences - total\n            obj[\"county\"] = county\n            build_obj.push(obj)\n        }\n        // console.log(build_obj)\n        const city_DF = new DataFrame(build_obj)\n        // console.log( city_DF.toString() )\n        ALL_DF = ALL_DF.append(city_DF, true)\n    }\n\n    let ALL_USA_JSON = [];\n\n    let ALL_col = [\"Alpha\",\"Beta\",\"Gamma\",\"Omicron\",\"Kappa\",\"Eta\",\"Iota\",\"Lambda\",\"others\",\"Delta\",\"non_variants\"];\n    let Need_DF = ALL_DF.get(ALL_col)\n\n    let week_set = new Set(ALL_DF.get('week').values)\n    const week_list = [...week_set]\n\n    for (var week_date of week_list) {\n        const WEEK_JSON = {}\n        const WEEK_JSON_T = Need_DF.filter(ALL_DF.get(\"week\").eq(week_date));\n\n        for (var col of ALL_col){\n            let now_list = WEEK_JSON_T.get(col).values\n            let total = 0\n            for (var t of now_list){\n                if(!isNaN(t)){\n                    total = total + t\n                }\n            }\n            // console.log(now_list)\n            WEEK_JSON[col] = total;\n        }\n        WEEK_JSON[\"week\"] = week_date\n        ALL_USA_JSON.push( WEEK_JSON )\n    }\n    // console.log( ALL_USA_JSON )\n\n    return [ ALL_DF, ALL_USA_JSON]\n}\n\n\nconst initialState = {\n    ALL_DF : new DataFrame(),\n    ALL_USA_JSON: {}\n}\n\nexport function userApp( state= initialState, action ) {\n\n    switch( action.type ){\n        // case REQUEST_USERS:\n        //     return { ...state, users: action.users };\n\n        case GETDATA:\n            // console.log(processData(action.ALL_JSON).toString())\n            const RE = processData(action.ALL_JSON)\n            return { ALL_DF: RE.at(0), ALL_USA_JSON: RE.at(1) }\n\n        default:\n            return state;\n    }\n    return state;\n}","import './App.css';\nimport {AreaChart, XAxis, YAxis, CartesianGrid, Tooltip, Area, Legend, ResponsiveContainer, Label} from 'recharts';\nimport Button from 'react-bootstrap/Button';\nimport {Badge, Card, Col, Container, Nav, Navbar, NavDropdown, Row, Spinner, Tab, Tabs} from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { DataFrame } from 'pandas-js';\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport {getdata} from \"./redux/Actions\";\nlet URL = \"https://raw.githubusercontent.com/hodcroftlab/covariants/master/cluster_tables/USAClusters_data.json\";\n\nclass App extends React.Component {\n\n  color_set = {\n    \"Alpha\": \"#8884d8\",\n    \"Beta\": \"#82ca9d\",\n    \"Gamma\": \"#FF8D33\",\n    \"Delta\": \"#15CFBE\",\n    \"Eta\": \"#F950CF\",\n    \"Kappa\": \"#187C33\",\n    \"Iota\": \"#155972\",\n    \"Lambda\": \"#232EE4\",\n    \"Omicron\": \"#BFBF21\",\n    \"others\": \"#B42DF8\",\n    // \"non_variants\": \"#EA2323\"\n  }\n\n  rename_columns = {\n    \"20I (Alpha, V1)\": \"Alpha\", \"20H (Beta, V2)\": \"Beta\", \"20J (Gamma, V3)\": \"Gamma\",\n    \"21K (Omicron)\": \"Omicron\", \"21B (Kappa)\": \"Kappa\", \"21D (Eta)\": \"Eta\", \"21G (Lambda)\": \"Lambda\",\n    \"21F (Iota)\": \"Iota\"\n  }\n\n  counties_list = ['California', 'Florida', 'Texas', 'Colorado', 'Minnesota', 'Massachusetts', 'New York', 'Washington', 'Michigan',\n    'North Carolina', 'Illinois', 'Utah', 'Arizona', 'New Jersey', 'Georgia', 'Pennsylvania', 'Maryland', 'Wisconsin', 'Indiana', 'Ohio',\n    'Tennessee', 'Nevada', 'Oregon', 'Virginia', 'Connecticut', 'West Virginia', 'Missouri', 'New Mexico', 'Louisiana', 'Kentucky',\n    'South Carolina', 'Alabama', 'Wyoming', 'Kansas', 'Idaho', 'Nebraska', 'Vermont', 'Arkansas', 'Iowa', 'Rhode Island', 'Alaska',\n    'Maine', 'Mississippi', 'North Dakota', 'Montana', 'Hawaii', 'Delaware', 'New Hampshire',\n    'Washington DC', 'Puerto Rico', 'Oklahoma', 'South Dakota', 'Virgin Islands', 'USA', 'Guam', 'Northern Mariana Islands']\n\n  counties_regions_set = {\n    \"New England\": [\"Connecticut\", \"Maine\", \"Massachusetts\", \"New Hampshire\", \"Rhode Island\", \"Vermont\"],\n    \"Mid-Atlantic\": [\"New Jersey\", \"New York\", \"Pennsylvania\"],\n    \"East North Central\": [\"Illinois\", \"Indiana\", \"Michigan\", \"Ohio\", \"Wisconsin\"],\n    \"West North Central\": [\"Iowa\", \"Kansas\", \"Minnesota\", \"Missouri\", \"Nebraska\", \"North Dakota\", \"South Dakota\"],\n    \"South Atlantic\": [\"Delaware\", \"Florida\", \"Georgia\", \"Maryland\", \"North Carolina\", \"South Carolina\", \"Virginia\", \"Washington DC\", \"West Virginia\"],\n    \"East South Central\": [\"Alabama\", \"Kentucky\", \"Mississippi\", \"Tennessee\"],\n    \"West South Central\": [\"Texas\", \"Arkansas\", \"Louisiana\", \"Oklahoma\"],\n    \"West Mountain\": [\"Arizona\", \"Colorado\", \"Idaho\", \"Montana\", \"Nevada\", \"New Mexico\", \"Utah\", \"Wyoming\"],\n    \"West Pacific\": [\"Alaska\", \"California\", \"Hawaii\", \"Oregon\", \"Washington\"],\n  }\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n  componentDidMount() {\n    fetch(URL)\n        .then(res => res.json())\n        .then(res =>\n        {\n          let ALL_JSON = res.countries;\n          this.props.getData(ALL_JSON);\n        }\n        );\n  }\n\n\n  getVarintsFromApiAsync() {\n\n    return fetch(URL)\n        .then((response) => response.json())\n        .then((responseJson) => {\n          return responseJson.countries;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n  }\n\n\n  getData_K() {\n    return this.getVarintsFromApiAsync()\n        .then((ALL_JSON) => {\n          // console.log(ALL_JSON)\n\n          let ALL_DF = new DataFrame()\n          for (const county in ALL_JSON) {\n            // console.log( ALL_JSON[county] )\n            const length = ALL_JSON[county].week.length\n            const covkeys = Object.keys(ALL_JSON[county])\n            const build_obj = []\n            for (var i in [...Array(length).keys()]) {\n              const obj = {};\n              let others = 0\n              let delta = 0\n              let total = 0\n              let total_sequences = 0\n              for (var K of covkeys) {\n                if (['20A/S:98F', '21H (Mu)', '20B/S:732A', '20A/S:126A', '20E (EU1)',\n                  '21C (Epsilon)', '20A/S:439K', 'S:677H.Robin1', 'S:677P.Pelican',\n                  '20A.EU2', '20G/S:677H.Robin2', '20G/S:677H.Yellowhammer',\n                  '20G/S:677R.Roadrunner', '20G/S:677H.Heron', '20G/S:677H.Bluebird',\n                  '20G/S:677H.Quail', '20G/S:677H.Mockingbird'].indexOf(K) >= 0) {\n                  others = others + ALL_JSON[county][K].at(i)\n                } else if (['21A (Delta)', '21I (Delta)', '21J (Delta)'].indexOf(K) >= 0) {\n                  delta = delta + ALL_JSON[county][K].at(i)\n                } else if (K === \"total_sequences\") {\n                  total_sequences = ALL_JSON[county][K].at(i)\n                  continue\n                } else if (K === \"week\") {\n                  obj[\"week\"] = ALL_JSON[county][K].at(i)\n                  continue\n                } else {\n                  obj[this.rename_columns[K]] = ALL_JSON[county][K].at(i)\n                }\n                total = total + ALL_JSON[county][K].at(i)\n              }\n              obj[\"Delta\"] = delta\n              obj[\"others\"] = others\n              obj[\"non_variants\"] = total_sequences - total\n              obj[\"county\"] = county\n              build_obj.push(obj)\n            }\n            // console.log(build_obj)\n            const city_DF = new DataFrame(build_obj)\n            // console.log( city_DF.toString() )\n            ALL_DF = ALL_DF.append(city_DF, true)\n          }\n          // console.log( ALL_DF.toString() )\n          return ALL_DF\n        })\n  }\n\n\n  One_Area(name) {\n    let fill = \"url(#\" + name + \")\"\n    return (\n        <Area type=\"monotone\" dataKey={name} stroke={this.color_set[name]} fillOpacity={1} fill={fill}/>\n    )\n  }\n\n\n  One_linearGradient(name) {\n    return (\n        <>\n          <linearGradient id={name} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset=\"5%\" stopColor={this.color_set[name]} stopOpacity={0.8}/>\n            <stop offset=\"95%\" stopColor={this.color_set[name]} stopOpacity={0}/>\n          </linearGradient>\n        </>\n    )\n  }\n\n\n  One_Plot(thisdata, ID) {\n    return (\n        <>\n          <div className=\"out-side\">\n            <div className=\"frame\">\n              <div id={ID} style={{width: '100vw', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n                <ResponsiveContainer width='80%' height={500}>\n                  <AreaChart width={1200} height={450} data={thisdata}\n                             margin={{top: 10, right: 30, left: 0, bottom: 0}}>\n                    <Legend verticalAlign=\"top\" height={72} iconType={\"square\"} width={\"100%\"}/>\n                    <defs>\n                      {/*<linearGradient id=\"Alpha\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">*/}\n                      {/*  <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>*/}\n                      {/*  <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>*/}\n                      {/*</linearGradient>*/}\n                      {(Object.keys(this.color_set)).map((virus) => (\n                          this.One_linearGradient(virus)\n                      ))}\n                    </defs>\n                    <XAxis dataKey=\"week\"/>\n                    {/*<XAxis dataKey=\"week\">*/}\n                    {/*  <Label value=\"Date\" offset={0} position=\"insideBottom\" />*/}\n                    {/*</XAxis>*/}\n                    <YAxis/>\n                    <CartesianGrid strokeDasharray=\"3 3\"/>\n                    <Tooltip/>\n                    {/*<Area type=\"monotone\" dataKey=\"Alpha\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#Alpha)\" />*/}\n                    {(Object.keys(this.color_set)).map((virus) => (\n                        this.One_Area(virus)\n                    ))}\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n          </div>\n        </>\n    )\n  }\n\n\n  One_Nav(county) {\n    return (\n        <Nav.Item>\n          <Nav.Link eventKey={county}>{county}</Nav.Link>\n        </Nav.Item>\n    )\n  }\n\n\n  One_TabPane(county) {\n\n    if( this.props.ALL_DF.length > 1 ){\n      let DF = this.props.ALL_DF;\n      const County_JSON = DF.filter(DF.get(\"county\").eq(county)).to_json({orient: 'records'});\n      // console.log(County_JSON)\n      return (\n          <Tab.Pane eventKey={county}>\n            {this.One_Plot(County_JSON, {county})}\n          </Tab.Pane>\n      )\n    }else{\n     return(\n         <Tab.Pane eventKey={county}>\n          <div style={{width: '100%'}}>\n            <Spinner style={{display: 'flex', margin: 'auto'}} animation=\"border\" />\n          </div>\n           {/* <Spinner style={{\"textAlign\": \"center\"}} animation=\"border\" /> */}\n         </Tab.Pane>\n     )\n    }\n  }\n\n\n  Each_County(region) {\n    return (\n        <Tab.Container id={region} defaultActiveKey={this.counties_regions_set[region].at(0)}>\n          <Row>\n            <Col sm={2}>\n              <Nav variant=\"pills\" className=\"flex-column\">\n                <strong>{region}</strong>\n                {(this.counties_regions_set[region]).map((county) => (\n                    this.One_Nav(county)\n                ))}\n              </Nav>\n            </Col>\n            <Col sm={10}>\n              <Tab.Content>\n                {(this.counties_regions_set[region]).map((county) => (\n                    this.One_TabPane(county)\n                ))}\n              </Tab.Content>\n            </Col>\n          </Row>\n        </Tab.Container>\n    )\n  }\n\n\n  Each_Region(region, indx) {\n    const sty = indx % 2 ? {\"paddingTop\": \"40px\", \"paddingBottom\": \"40px\", \"background\": \"whitesmoke\"}\n        : {\"paddingTop\": \"40px\", \"paddingBottom\": \"40px\"}\n\n    return (\n        <Container id={region} style={sty} fluid>\n          {this.Each_County(region)}\n        </Container>\n    )\n\n  }\n\n  calling_all(){\n    if(this.props.ALL_USA_JSON.length > 0){\n      return( this.One_Plot(this.props.ALL_USA_JSON, \"ALL_USA\") )\n    }else{\n      return(\n        <div style={{width: '100%'}}>\n          <Spinner style={{display: 'flex', margin: 'auto'}} animation=\"border\" />\n        </div>\n      )\n    }\n  }\n\n  render() {\n\n    return (\n        <>\n          <div style={{position: 'fixed', width: '100%', zIndex: '1000'}}>\n            <Navbar bg=\"primary\" variant=\"dark\" >\n              <Container>\n                <Navbar.Brand href=\"#USA\"># 1.10 Overview of Variants in United States</Navbar.Brand>\n                <Nav className=\"me-auto\">\n                  <Nav.Link href=\"#USA\">All</Nav.Link>\n                  <NavDropdown title=\"View by Counties\" id=\"regions\">\n                    <NavDropdown.Item href=\"#New England\">New England</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#Mid-Atlantic\">Mid-Atlantic</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#East North Central\">East North Central</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#West North Central\">West North Central</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#South Atlantic\">South Atlantic</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#East South Central\">East South Central</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#West South Central\">West South Central</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#West Mountain\">West Mountain</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#West Pacific\">West Pacific</NavDropdown.Item>\n                  </NavDropdown>\n                  <Nav.Link href=\"https://usa-variant-zz85.surge.sh/\" target=\"_blank\">Vew Details</Nav.Link>\n                  <Nav.Link href=\"https://github.com/hodcroftlab/covariants\" target=\"_blank\">Data Sources</Nav.Link>\n                </Nav>\n              </Container>\n            </Navbar>\n          </div>\n          <div style={{paddingTop: '50px'}}></div>\n          <Container style={{\"background\": \"whitesmoke\"}} fluid>\n              <h2 style={{\"textAlign\": \"center\", \"paddingTop\": \"30px\"}} id=\"USA\">- Whole USA- </h2>\n              {this.calling_all()}\n          </Container>\n          \n          <div id=\"regions\">\n            {\n              Object.keys(this.counties_regions_set).map((region, idx) => (\n                  this.Each_Region(region, idx)\n              ))}\n          </div>\n\n          {/*Footer*/}\n          <Card className=\"text-center\">\n            <Card.Body>\n              <Card.Title>Overview of Variants in United States</Card.Title>\n              <Card.Text>\n                <strong>Class</strong>:COMP/ELEC 425/554 Computer Systems Architecture, Ray Simar\n                <br/>\n                <strong>Team</strong>: Hope-Simpson, #1.10 - How might we display variants?\n                <br/>\n                <strong>Author</strong>:\n                <a href={\"https://github.com/baskvava\"}>Ying-Hsuan Chen</a> (yc144@rice.edu),\n                <a href={\"https://github.com/QuenLo\"}>Cyuan-Heng Luo</a> (quenluo@rice.edu),\n                <a href=\"\">Zijian Zhou</a>  (zjzhou@rice.edu)\n                <br/>\n                <strong>Thanks To</strong>: Emma B. Hodcroft. 2021. \"CoVariants: SARS-CoV-2 Mutations and Variants of\n                Interest.\" <a href={\"https://covariants.org/\"}>https://covariants.org/</a>\n              </Card.Text>\n              <Button variant=\"primary\" href={\"https://github.com/baskvava/CoVariants\"}>CoVariants (Github)</Button>\n            </Card.Body>\n            <Card.Footer className=\"text-muted\">@2021 Rice Comp 554 Hope-Simpson</Card.Footer>\n          </Card>\n        </>\n    );\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    // users_all: state.users,\n    ALL_DF: state.ALL_DF,\n    ALL_USA_JSON: state.ALL_USA_JSON\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // requestUsers: (js) => dispatch(requestUsers(js)),\n    getData: (ALL_JSON) => dispatch(getdata(ALL_JSON))\n  }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)  (App);\n\n// export default App;\n","import './App.css';\nimport React  from 'react';\nimport { createStore} from \"redux\";\nimport {\n    BrowserRouter as Router, Switch, Route\n} from \"react-router-dom\";\nimport {userApp} from \"./redux/Reducer\";\n\n// Components\n\n// Pages\nimport NextApp from './nextApp';\nimport {Provider} from \"react-redux\";\n\nconst store = createStore( userApp )\n\n// convert object to string and store in localStorage\nfunction saveToLocalStorage(state) {\n    try {\n        const serialisedState = JSON.stringify(state);\n        localStorage.setItem(\"state\", serialisedState);\n    } catch (e) {\n        console.warn(e);\n    }\n}\n\nstore.subscribe(() => saveToLocalStorage(store.getState()));\n\n// export default App;\nexport default function preApp() {\n    return (\n        <Provider store={ store }>\n            <Router>\n                <div>\n                    <NextApp/>\n                </div>\n            </Router>\n        </Provider>\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}